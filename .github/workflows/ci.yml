name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    name: ${{ matrix.os-name }}-${{ matrix.engines }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2022, ubuntu-22.04 ]
        engines: [
            AzureStorage,
            Oracle,
            RabbitMQ,
            RavenDB4,
            SqlServer,
            AzureStorage-Oracle,
            AzureStorage-RabbitMQ,
            AzureStorage-RavenDB4,
            AzureStorage-SqlServer,
            Oracle-RabbitMQ,
            RabbitMQ-RavenDB4,
            RabbitMQ-SqlServer
          ]
        include:
          - engines: AzureStorage
            upload-packages: true
          # Add os-name alias for job name
          - os: windows-2022
            os-name: Windows
          - os: ubuntu-22.04
            os-name: Linux
          # Additional permutations
          - os: windows-2022
            os-name: Windows
            engines: RabbitMQ-RavenDB3
          - os: windows-2022
            os-name: Windows
            engines: RavenDB3
      fail-fast: false
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        shell: pwsh
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.2.0
        with:
          dotnet-version: 8.0.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: matrix.upload-packages && runner.os == 'Windows'
        uses: actions/upload-artifact@v4.4.3
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
      - name: Azure login
        uses: azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_ACI_CREDENTIALS }}
      - name: Setup Azure Storage
        if: contains(matrix.engines, 'AzureStorage')
        uses: Particular/setup-azurestorage-action@v2.0.0
        with:
          connection-string-name: AzureStorageConnectionString
          azure-credentials: ${{ secrets.AZURE_ACI_CREDENTIALS }}
          tag: TimeoutMigrationTool
      - name: Setup Oracle
        if: contains(matrix.engines, 'Oracle')
        uses: Particular/setup-oracle-action@v1.6.0
        with:
          connection-string-name: OracleConnectionString
          tag: TimeoutMigrationTool
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup RabbitMQ
        if: contains(matrix.engines, 'RabbitMQ')
        uses: Particular/setup-rabbitmq-action@v1.7.1
        with:
          connection-string-name: RabbitMqConnectionString
          host-env-var-name: RabbitMqHost
          tag: TimeoutMigrationTool
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup RavenDB3
        if: contains(matrix.engines, 'RavenDB3')
        shell: pwsh
        run: |
          choco install ravendb3 --version 3.5.3 -y
          echo "Raven3Url=http://localhost:8080" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      - name: Setup RavenDB4
        if: contains(matrix.engines, 'RavenDB4')
        id: setup-ravendb
        uses: Particular/setup-ravendb-action@v1.8.0
        with:
            single-connection-string-name: Raven4Url
            ravendb-license: ${{ secrets.RAVENDB_LICENSE }}
            ravendb-mode: Single
            ravendb-version: 4.2-ubuntu-latest
            tag: TimeoutMigrationTool
            registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
            registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Install SQL Server
        if: contains(matrix.engines, 'SqlServer')
        uses: Particular/install-sql-server-action@v1.2.0
        with:
          connection-string-env-var: SqlServerConnectionString
          catalog: nservicebus
          extra-params: "Encrypt=False;"
      - name: Run tests
        uses: Particular/run-tests-action@v1.7.0
        with:
          report-warnings: ${{ secrets.TESTS_REPORT_WARNINGS }}
